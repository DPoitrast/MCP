# Environment Configuration Example
# Copy this file to .env and fill in the values as needed.

# --- Application Environment ---
# Set to "development" or "production"
ENVIRONMENT=development
# Set to True for debug logs and features, False for production
DEBUG=True
# Logging level (DEBUG, INFO, WARNING, ERROR, CRITICAL)
LOG_LEVEL=INFO

# --- Security ---
# IMPORTANT: Generate a strong, random secret key for production!
# This key is used for signing JWTs.
# For development, if ENVIRONMENT=development and this is left as the placeholder or empty,
# a default development key will be used (see app/core/config.py).
SECRET_KEY="your-super-secret-key-here-change-in-production"

# Algorithm for JWT signing (default is HS256, usually not changed)
# ALGORITHM=HS256

# Access token expiration time in minutes (default is 30)
# ACCESS_TOKEN_EXPIRE_MINUTES=30

# CORS Allowed Origins
# Comma-separated list of frontend URLs that are allowed to access the API.
# Example: ALLOWED_ORIGINS="http://localhost:3000,http://localhost:8080,https://your.frontend.com"
# If commented out or not set, a default factory in config.py provides development defaults.
# The parsing of this comma-separated list into list[str] depends on pydantic-settings behavior
# in the Settings class (e.g., using env_separator or custom parsing).
ALLOWED_ORIGINS="http://localhost:3000,http://localhost:8080"

# --- Database ---
# Default is SQLite. DATABASE_PATH will be used.
# For other databases like PostgreSQL, you would typically set DATABASE_URL.
# DATABASE_URL="postgresql://user:password@host:port/database"
DATABASE_PATH="mcp.db" # Path to the SQLite database file

# --- OpenAI API Key ---
# Required for features involving OpenAI models (e.g., in MCPAgent).
# Obtain from https://platform.openai.com/api-keys
OPENAI_API_KEY=""

# --- Performance Tuning (Optional - Defaults are usually fine) ---
# Maximum number of items to return in a single query (default: 1000)
# MAX_QUERY_LIMIT=1000
# Default number of items to return in a paginated query if limit is not specified (default: 100)
# DEFAULT_QUERY_LIMIT=100
# Database connection timeout in seconds (default: 30.0)
# CONNECTION_TIMEOUT=30.0

# Note: API prefix, title, description, version are typically set in code (app/core/config.py)
# and not usually overridden by environment variables unless explicitly handled in the Settings model.
